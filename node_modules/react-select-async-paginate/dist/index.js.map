{"version":3,"sources":["../src/index.ts","../src/useAsyncPaginate.ts","../src/useAsyncPaginateBase.ts","../src/defaultReduceOptions.ts","../src/defaultShouldLoadMore.ts","../src/getInitialCache.ts","../src/getInitialOptionsCache.ts","../src/requestOptions.ts","../src/validateResponse.ts","../src/useComponents.ts","../src/wrapMenuList.tsx","../src/withAsyncPaginate.tsx","../src/reduceGroupedOptions.ts"],"sourcesContent":["import Select from \"react-select\";\nimport { withAsyncPaginate } from \"./withAsyncPaginate\";\n\nexport { wrapMenuList } from \"./wrapMenuList\";\nexport { reduceGroupedOptions } from \"./reduceGroupedOptions\";\n\nexport { withAsyncPaginate };\n\nexport {\n\tcheckIsResponse,\n\tvalidateResponse,\n} from \"./validateResponse\";\nexport { useAsyncPaginateBase } from \"./useAsyncPaginateBase\";\nexport { useAsyncPaginate } from \"./useAsyncPaginate\";\nexport { useComponents } from \"./useComponents\";\n\nexport const AsyncPaginate = withAsyncPaginate(Select);\n\nexport * from \"./types\";\n","import { useCallback, useState } from \"react\";\nimport type { GroupBase, InputActionMeta } from \"react-select\";\nimport type {\n\tUseAsyncPaginateBaseResult,\n\tUseAsyncPaginateParams,\n\tUseAsyncPaginateResult,\n} from \"./types\";\nimport { useAsyncPaginateBase } from \"./useAsyncPaginateBase\";\n\nexport const useAsyncPaginate = <\n\tOptionType,\n\tGroup extends GroupBase<OptionType>,\n\tAdditional,\n>(\n\tparams: UseAsyncPaginateParams<OptionType, Group, Additional>,\n\tdeps: ReadonlyArray<unknown> = [],\n): UseAsyncPaginateResult<OptionType, Group> => {\n\tconst {\n\t\tinputValue: inputValueParam,\n\t\tmenuIsOpen: menuIsOpenParam,\n\t\tdefaultInputValue: defaultInputValueParam,\n\t\tdefaultMenuIsOpen: defaultMenuIsOpenParam,\n\t\tonInputChange: onInputChangeParam,\n\t\tonMenuClose: onMenuCloseParam,\n\t\tonMenuOpen: onMenuOpenParam,\n\t} = params;\n\n\tconst [inputValueState, setInputValue] = useState(\n\t\tdefaultInputValueParam || \"\",\n\t);\n\tconst [menuIsOpenState, setMenuIsOpen] = useState(!!defaultMenuIsOpenParam);\n\n\tconst inputValue: string =\n\t\ttypeof inputValueParam === \"string\" ? inputValueParam : inputValueState;\n\n\tconst menuIsOpen: boolean =\n\t\ttypeof menuIsOpenParam === \"boolean\" ? menuIsOpenParam : menuIsOpenState;\n\n\tconst onInputChange = useCallback(\n\t\t(nextInputValue: string, actionMeta: InputActionMeta): void => {\n\t\t\tif (onInputChangeParam) {\n\t\t\t\tonInputChangeParam(nextInputValue, actionMeta);\n\t\t\t}\n\n\t\t\tsetInputValue(nextInputValue);\n\t\t},\n\t\t[onInputChangeParam],\n\t);\n\n\tconst onMenuClose = useCallback((): void => {\n\t\tif (onMenuCloseParam) {\n\t\t\tonMenuCloseParam();\n\t\t}\n\n\t\tsetMenuIsOpen(false);\n\t}, [onMenuCloseParam]);\n\n\tconst onMenuOpen = useCallback((): void => {\n\t\tif (onMenuOpenParam) {\n\t\t\tonMenuOpenParam();\n\t\t}\n\n\t\tsetMenuIsOpen(true);\n\t}, [onMenuOpenParam]);\n\n\tconst baseResult: UseAsyncPaginateBaseResult<OptionType, Group> =\n\t\tuseAsyncPaginateBase(\n\t\t\t{\n\t\t\t\t...params,\n\t\t\t\tinputValue,\n\t\t\t\tmenuIsOpen,\n\t\t\t},\n\t\t\tdeps,\n\t\t);\n\n\treturn {\n\t\t...baseResult,\n\t\tinputValue,\n\t\tmenuIsOpen,\n\t\tonInputChange,\n\t\tonMenuClose,\n\t\tonMenuOpen,\n\t};\n};\n","import { useLazyRef } from \"@vtaits/use-lazy-ref\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport type { GroupBase } from \"react-select\";\nimport useIsMountedRef from \"use-is-mounted-ref\";\nimport useLatest from \"use-latest\";\nimport { defaultReduceOptions } from \"./defaultReduceOptions\";\nimport { defaultShouldLoadMore } from \"./defaultShouldLoadMore\";\nimport { getInitialCache } from \"./getInitialCache\";\nimport { getInitialOptionsCache } from \"./getInitialOptionsCache\";\nimport { requestOptions } from \"./requestOptions\";\nimport type {\n\tOptionsCacheItem,\n\tRequestOptionsCallerType,\n\tUseAsyncPaginateBaseParams,\n\tUseAsyncPaginateBaseResult,\n} from \"./types\";\n\nexport const increaseStateId = (prevStateId: number): number => prevStateId + 1;\n\nexport const useAsyncPaginateBase = <\n\tOptionType,\n\tGroup extends GroupBase<OptionType>,\n\tAdditional,\n>(\n\tparams: UseAsyncPaginateBaseParams<OptionType, Group, Additional>,\n\tdeps: ReadonlyArray<unknown> = [],\n): UseAsyncPaginateBaseResult<OptionType, Group> => {\n\tconst {\n\t\tdefaultOptions,\n\t\tloadOptionsOnMenuOpen = true,\n\t\tdebounceTimeout = 0,\n\t\tinputValue,\n\t\tmenuIsOpen,\n\t\tfilterOption = null,\n\t\treduceOptions = defaultReduceOptions,\n\t\tshouldLoadMore = defaultShouldLoadMore,\n\t} = params;\n\n\tconst isMountedRef = useIsMountedRef();\n\tconst reduceOptionsRef = useLatest(reduceOptions);\n\tconst loadOptionsOnMenuOpenRef = useLatest(loadOptionsOnMenuOpen);\n\n\tconst isInitRef = useRef<boolean>(true);\n\tconst paramsRef =\n\t\tuseRef<UseAsyncPaginateBaseParams<OptionType, Group, Additional>>(params);\n\n\tparamsRef.current = params;\n\n\tconst [_stateId, setStateId] = useState(0);\n\n\tconst optionsCacheRef = useLazyRef(() => getInitialOptionsCache(params));\n\n\tconst callRequestOptionsRef = useLatest(\n\t\t(caller: RequestOptionsCallerType) => {\n\t\t\trequestOptions(\n\t\t\t\tcaller,\n\t\t\t\tparamsRef,\n\t\t\t\toptionsCacheRef,\n\t\t\t\tdebounceTimeout,\n\t\t\t\t(reduceState) => {\n\t\t\t\t\toptionsCacheRef.current = reduceState(optionsCacheRef.current);\n\n\t\t\t\t\tif (isMountedRef.current) {\n\t\t\t\t\t\tsetStateId(increaseStateId);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treduceOptionsRef.current,\n\t\t\t);\n\t\t},\n\t);\n\n\tconst handleScrolledToBottom = useCallback(() => {\n\t\tconst currentInputValue = paramsRef.current.inputValue;\n\t\tconst currentOptions = optionsCacheRef.current[currentInputValue];\n\n\t\tif (currentOptions) {\n\t\t\tcallRequestOptionsRef.current(\"menu-scroll\");\n\t\t}\n\t}, [callRequestOptionsRef, optionsCacheRef]);\n\n\t// biome-ignore lint/correctness/useExhaustiveDependencies: `callRequestOptionsRef` is a ref\n\tuseEffect(() => {\n\t\tif (isInitRef.current) {\n\t\t\tisInitRef.current = false;\n\t\t} else {\n\t\t\toptionsCacheRef.current = {};\n\t\t\tsetStateId(increaseStateId);\n\t\t}\n\n\t\tif (defaultOptions === true) {\n\t\t\tcallRequestOptionsRef.current(\"autoload\");\n\t\t}\n\t}, deps);\n\n\tuseEffect(() => {\n\t\tif (menuIsOpen && !optionsCacheRef.current[inputValue]) {\n\t\t\tcallRequestOptionsRef.current(\"input-change\");\n\t\t}\n\t}, [callRequestOptionsRef, inputValue, menuIsOpen, optionsCacheRef]);\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\tmenuIsOpen &&\n\t\t\t!optionsCacheRef.current[\"\"] &&\n\t\t\tloadOptionsOnMenuOpenRef.current\n\t\t) {\n\t\t\tcallRequestOptionsRef.current(\"menu-toggle\");\n\t\t}\n\t}, [\n\t\tcallRequestOptionsRef,\n\t\tloadOptionsOnMenuOpenRef,\n\t\tmenuIsOpen,\n\t\toptionsCacheRef,\n\t]);\n\n\tconst currentOptions: OptionsCacheItem<OptionType, Group, Additional> =\n\t\toptionsCacheRef.current[inputValue] || getInitialCache(params);\n\n\treturn {\n\t\thandleScrolledToBottom,\n\t\tshouldLoadMore,\n\t\tfilterOption,\n\t\tisLoading: currentOptions.isLoading,\n\t\tisFirstLoad: currentOptions.isFirstLoad,\n\t\toptions: currentOptions.options,\n\t};\n};\n","import type { GroupBase, OptionsOrGroups } from \"react-select\";\n\nexport const defaultReduceOptions = <\n\tOptionType,\n\tGroup extends GroupBase<OptionType>,\n>(\n\tprevOptions: OptionsOrGroups<OptionType, Group>,\n\tloadedOptions: OptionsOrGroups<OptionType, Group>,\n) => [...prevOptions, ...loadedOptions];\n","import type { ShouldLoadMore } from \"./types\";\n\nconst AVAILABLE_DELTA = 10;\n\nexport const defaultShouldLoadMore: ShouldLoadMore = (\n\tscrollHeight,\n\tclientHeight,\n\tscrollTop,\n) => {\n\tconst bottomBorder = scrollHeight - clientHeight - AVAILABLE_DELTA;\n\n\treturn bottomBorder < scrollTop;\n};\n","import type { GroupBase } from \"react-select\";\nimport type { OptionsCacheItem, UseAsyncPaginateBaseParams } from \"./types\";\n\nexport const getInitialCache = <\n\tOptionType,\n\tGroup extends GroupBase<OptionType>,\n\tAdditional,\n>(\n\tparams: UseAsyncPaginateBaseParams<OptionType, Group, Additional>,\n): OptionsCacheItem<OptionType, Group, Additional> => ({\n\tisFirstLoad: true,\n\toptions: [],\n\thasMore: true,\n\tisLoading: false,\n\tadditional: params.additional,\n});\n","import type { GroupBase } from \"react-select\";\nimport type { OptionsCache, UseAsyncPaginateBaseParams } from \"./types\";\n\nexport const getInitialOptionsCache = <\n\tOptionType,\n\tGroup extends GroupBase<OptionType>,\n\tAdditional,\n>({\n\toptions,\n\tdefaultOptions,\n\tadditional,\n\tdefaultAdditional,\n}: UseAsyncPaginateBaseParams<OptionType, Group, Additional>): OptionsCache<\n\tOptionType,\n\tGroup,\n\tAdditional\n> => {\n\tconst initialOptions =\n\t\tdefaultOptions === true\n\t\t\t? null\n\t\t\t: Array.isArray(defaultOptions)\n\t\t\t\t? defaultOptions\n\t\t\t\t: options;\n\n\tif (initialOptions) {\n\t\treturn {\n\t\t\t\"\": {\n\t\t\t\tisFirstLoad: false,\n\t\t\t\tisLoading: false,\n\t\t\t\toptions: initialOptions,\n\t\t\t\thasMore: true,\n\t\t\t\tadditional: defaultAdditional || additional,\n\t\t\t},\n\t\t};\n\t}\n\n\treturn {};\n};\n","import { getResult } from \"krustykrab\";\nimport type { MutableRefObject } from \"react\";\nimport type { GroupBase } from \"react-select\";\nimport sleep from \"sleep-promise\";\nimport { getInitialCache } from \"./getInitialCache\";\nimport type {\n\tOptionsCache,\n\tOptionsCacheItem,\n\tReduceOptions,\n\tRequestOptionsCallerType,\n\tUseAsyncPaginateBaseParams,\n} from \"./types\";\nimport { validateResponse } from \"./validateResponse\";\n\ntype MapOptionsCache<\n\tOptionType,\n\tGroup extends GroupBase<OptionType>,\n\tAdditional,\n> = (\n\tprevCache: OptionsCache<OptionType, Group, Additional>,\n) => OptionsCache<OptionType, Group, Additional>;\n\ntype SetOptionsCache<\n\tOptionType,\n\tGroup extends GroupBase<OptionType>,\n\tAdditional,\n> = (stateMapper: MapOptionsCache<OptionType, Group, Additional>) => void;\n\nexport const requestOptions = async <\n\tOptionType,\n\tGroup extends GroupBase<OptionType>,\n\tAdditional,\n>(\n\tcaller: RequestOptionsCallerType,\n\tparamsRef: MutableRefObject<\n\t\tUseAsyncPaginateBaseParams<OptionType, Group, Additional>\n\t>,\n\toptionsCacheRef: MutableRefObject<\n\t\tOptionsCache<OptionType, Group, Additional>\n\t>,\n\tdebounceTimeout: number,\n\tsetOptionsCache: SetOptionsCache<OptionType, Group, Additional>,\n\treduceOptions: ReduceOptions<OptionType, Group, Additional>,\n): Promise<void> => {\n\tconst currentInputValue = paramsRef.current.inputValue;\n\n\tconst isCacheEmpty = !optionsCacheRef.current[currentInputValue];\n\n\tconst currentOptions: OptionsCacheItem<OptionType, Group, Additional> =\n\t\tisCacheEmpty\n\t\t\t? getInitialCache(paramsRef.current)\n\t\t\t: optionsCacheRef.current[currentInputValue];\n\n\tif (currentOptions.isLoading || !currentOptions.hasMore) {\n\t\treturn;\n\t}\n\n\tsetOptionsCache(\n\t\t(\n\t\t\tprevOptionsCache: OptionsCache<OptionType, Group, Additional>,\n\t\t): OptionsCache<OptionType, Group, Additional> => ({\n\t\t\t...prevOptionsCache,\n\t\t\t[currentInputValue]: {\n\t\t\t\t...currentOptions,\n\t\t\t\tisLoading: true,\n\t\t\t},\n\t\t}),\n\t);\n\n\tif (debounceTimeout > 0 && caller === \"input-change\") {\n\t\tawait sleep(debounceTimeout);\n\n\t\tconst newInputValue = paramsRef.current.inputValue;\n\n\t\tif (currentInputValue !== newInputValue) {\n\t\t\tsetOptionsCache((prevOptionsCache) => {\n\t\t\t\tif (isCacheEmpty) {\n\t\t\t\t\tconst { [currentInputValue]: itemForDelete, ...restCache } =\n\t\t\t\t\t\tprevOptionsCache;\n\n\t\t\t\t\treturn restCache;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...prevOptionsCache,\n\t\t\t\t\t[currentInputValue]: {\n\t\t\t\t\t\t...currentOptions,\n\t\t\t\t\t\tisLoading: false,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\t}\n\n\tconst { loadOptions } = paramsRef.current;\n\n\tconst result = await getResult(\n\t\tPromise.resolve().then(() =>\n\t\t\tloadOptions(\n\t\t\t\tcurrentInputValue,\n\t\t\t\tcurrentOptions.options,\n\t\t\t\tcurrentOptions.additional,\n\t\t\t),\n\t\t),\n\t);\n\n\tif (result.isErr()) {\n\t\tsetOptionsCache((prevOptionsCache) => ({\n\t\t\t...prevOptionsCache,\n\t\t\t[currentInputValue]: {\n\t\t\t\t...currentOptions,\n\t\t\t\tisLoading: false,\n\t\t\t},\n\t\t}));\n\n\t\treturn;\n\t}\n\n\tconst response = result.unwrap();\n\n\tif (validateResponse(response)) {\n\t\tconst { options, hasMore } = response;\n\n\t\tconst newAdditional = Object.hasOwn(response, \"additional\")\n\t\t\t? response.additional\n\t\t\t: currentOptions.additional;\n\n\t\tsetOptionsCache((prevOptionsCache) => ({\n\t\t\t...prevOptionsCache,\n\t\t\t[currentInputValue]: {\n\t\t\t\t...currentOptions,\n\t\t\t\toptions: reduceOptions(currentOptions.options, options, newAdditional),\n\t\t\t\thasMore: !!hasMore,\n\t\t\t\tisLoading: false,\n\t\t\t\tisFirstLoad: false,\n\t\t\t\tadditional: newAdditional,\n\t\t\t},\n\t\t}));\n\t}\n};\n","import type { GroupBase } from \"react-select\";\nimport type { Response } from \"./types\";\n\nexport const errorText =\n\t'[react-select-async-paginate] response of \"loadOptions\" should be an object with \"options\" prop, which contains array of options.';\n\nexport const checkIsResponse = <\n\tOptionType,\n\tGroup extends GroupBase<OptionType>,\n\tAdditional,\n>(\n\tresponse: unknown,\n): response is Response<OptionType, Group, Additional> => {\n\tif (!response) {\n\t\treturn false;\n\t}\n\n\tconst { options, hasMore } = response as {\n\t\toptions?: unknown;\n\t\thasMore?: unknown;\n\t};\n\n\tif (!Array.isArray(options)) {\n\t\treturn false;\n\t}\n\n\tif (typeof hasMore !== \"boolean\" && typeof hasMore !== \"undefined\") {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\nexport const validateResponse = <\n\tOptionType,\n\tGroup extends GroupBase<OptionType>,\n\tAdditional,\n>(\n\tresponse: unknown,\n): response is Response<OptionType, Group, Additional> => {\n\tif (!checkIsResponse(response)) {\n\t\tconsole.error(errorText, \"Received:\", response);\n\t\tthrow new Error(errorText);\n\t}\n\n\treturn true;\n};\n","import { useMemo } from \"react\";\nimport type { GroupBase, Props as SelectProps } from \"react-select\";\nimport { components as defaultComponents } from \"react-select\";\nimport { wrapMenuList } from \"./wrapMenuList\";\n\nexport const MenuList = wrapMenuList(defaultComponents.MenuList);\n\nexport type SelectComponentsConfig<\n\tOptionType,\n\tIsMulti extends boolean,\n\tGroup extends GroupBase<OptionType>,\n> = Partial<SelectProps<OptionType, IsMulti, Group>[\"components\"]>;\n\nexport const useComponents = <\n\tOptionType,\n\tGroup extends GroupBase<OptionType>,\n\tIsMulti extends boolean,\n>(\n\tcomponents: SelectComponentsConfig<OptionType, IsMulti, Group>,\n): SelectComponentsConfig<OptionType, IsMulti, Group> =>\n\tuseMemo(\n\t\t() => ({\n\t\t\tMenuList,\n\t\t\t...components,\n\t\t}),\n\t\t[components],\n\t);\n","import composeRefs from \"@seznam/compose-react-refs\";\nimport { useCallback, useEffect, useMemo, useRef } from \"react\";\nimport type { ReactElement } from \"react\";\nimport type { GroupBase, MenuListProps } from \"react-select\";\nimport type { ShouldLoadMore } from \"./types\";\n\nexport const CHECK_TIMEOUT = 300;\n\nexport type BaseSelectProps = {\n\thandleScrolledToBottom?: () => void;\n\tshouldLoadMore: ShouldLoadMore;\n};\n\ntype MenuListType<\n\tOption = unknown,\n\tIsMulti extends boolean = boolean,\n\tGroup extends GroupBase<Option> = GroupBase<Option>,\n> = (props: MenuListProps<Option, IsMulti, Group>) => ReactElement;\n\nexport function wrapMenuList<\n\tOption = unknown,\n\tIsMulti extends boolean = boolean,\n\tGroup extends GroupBase<Option> = GroupBase<Option>,\n>(MenuList: MenuListType<Option, IsMulti, Group>) {\n\tfunction WrappedMenuList(props: MenuListProps<Option, IsMulti, Group>) {\n\t\tconst { selectProps, innerRef } = props;\n\n\t\tconst { handleScrolledToBottom, shouldLoadMore } =\n\t\t\tselectProps as unknown as BaseSelectProps;\n\n\t\tconst checkTimeoutRef = useRef<NodeJS.Timeout>();\n\t\tconst menuListRef = useRef<HTMLElement>(null);\n\n\t\tconst shouldHandle = useCallback(() => {\n\t\t\tconst el = menuListRef.current;\n\n\t\t\t// menu is not rendered\n\t\t\tif (!el) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst { scrollTop, scrollHeight, clientHeight } = el;\n\n\t\t\treturn shouldLoadMore(scrollHeight, clientHeight, scrollTop);\n\t\t}, [shouldLoadMore]);\n\n\t\tconst checkAndHandle = useCallback(() => {\n\t\t\tif (shouldHandle()) {\n\t\t\t\tif (handleScrolledToBottom) {\n\t\t\t\t\thandleScrolledToBottom();\n\t\t\t\t}\n\t\t\t}\n\t\t}, [shouldHandle, handleScrolledToBottom]);\n\n\t\tconst setCheckAndHandleTimeout = useMemo(() => {\n\t\t\tconst res = () => {\n\t\t\t\tcheckAndHandle();\n\n\t\t\t\tcheckTimeoutRef.current = setTimeout(res, CHECK_TIMEOUT);\n\t\t\t};\n\n\t\t\treturn res;\n\t\t}, [checkAndHandle]);\n\n\t\t// biome-ignore lint/correctness/useExhaustiveDependencies: call only on init\n\t\tuseEffect(() => {\n\t\t\tsetCheckAndHandleTimeout();\n\n\t\t\treturn () => {\n\t\t\t\tif (checkTimeoutRef.current) {\n\t\t\t\t\tclearTimeout(checkTimeoutRef.current);\n\t\t\t\t}\n\t\t\t};\n\t\t}, []);\n\n\t\treturn (\n\t\t\t<MenuList\n\t\t\t\t{...props}\n\t\t\t\tinnerRef={composeRefs<HTMLElement>(innerRef, menuListRef)}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn WrappedMenuList;\n}\n","import type { ReactElement, Ref } from \"react\";\nimport type {\n\tGroupBase,\n\tSelectInstance,\n\tProps as SelectProps,\n} from \"react-select\";\nimport type {\n\tAsyncPaginateProps,\n\tUseAsyncPaginateResult,\n\tWithAsyncPaginateType,\n} from \"./types\";\nimport { useAsyncPaginate } from \"./useAsyncPaginate\";\nimport { useComponents } from \"./useComponents\";\n\nconst defaultCacheUniqs: unknown[] = [];\nconst defaultComponents = {};\n\ntype SelectComponentType = <\n\tOption = unknown,\n\tIsMulti extends boolean = boolean,\n\tGroup extends GroupBase<Option> = GroupBase<Option>,\n>(\n\tprops: SelectProps<Option, IsMulti, Group> & {\n\t\tref?: Ref<SelectInstance<Option, IsMulti, Group>>;\n\t},\n) => ReactElement;\n\nexport function withAsyncPaginate(\n\tSelectComponent: SelectComponentType,\n): WithAsyncPaginateType {\n\tfunction WithAsyncPaginate<\n\t\tOptionType,\n\t\tGroup extends GroupBase<OptionType>,\n\t\tAdditional,\n\t\tIsMulti extends boolean = false,\n\t>(\n\t\tprops: AsyncPaginateProps<OptionType, Group, Additional, IsMulti>,\n\t): ReactElement {\n\t\tconst {\n\t\t\tcomponents = defaultComponents,\n\t\t\tselectRef = undefined,\n\t\t\tisLoading: isLoadingProp,\n\t\t\tcacheUniqs = defaultCacheUniqs,\n\t\t\t...rest\n\t\t} = props;\n\n\t\tconst asyncPaginateProps: UseAsyncPaginateResult<OptionType, Group> =\n\t\t\tuseAsyncPaginate(rest, cacheUniqs);\n\n\t\tconst processedComponents = useComponents<OptionType, Group, IsMulti>(\n\t\t\tcomponents,\n\t\t);\n\n\t\tconst isLoading =\n\t\t\ttypeof isLoadingProp === \"boolean\"\n\t\t\t\t? isLoadingProp\n\t\t\t\t: asyncPaginateProps.isLoading;\n\n\t\treturn (\n\t\t\t<SelectComponent\n\t\t\t\t{...props}\n\t\t\t\t{...asyncPaginateProps}\n\t\t\t\tisLoading={isLoading}\n\t\t\t\tcomponents={processedComponents}\n\t\t\t\tref={selectRef}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn WithAsyncPaginate;\n}\n","import type { GroupBase, OptionsOrGroups } from \"react-select\";\n\nexport const checkGroup = (group: unknown): group is GroupBase<unknown> => {\n\tif (!group) {\n\t\treturn false;\n\t}\n\n\tconst { label, options } = group as {\n\t\tlabel?: unknown;\n\t\toptions?: unknown;\n\t};\n\n\tif (typeof label !== \"string\" && typeof label !== \"undefined\") {\n\t\treturn false;\n\t}\n\n\tif (!Array.isArray(options)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\nexport const reduceGroupedOptions = <\n\tOptionType,\n\tGroup extends GroupBase<OptionType>,\n>(\n\tprevOptions: OptionsOrGroups<OptionType, Group>,\n\tloadedOptions: OptionsOrGroups<OptionType, Group>,\n): OptionsOrGroups<OptionType, Group> => {\n\tconst res = prevOptions.slice();\n\n\tconst mapLabelToIndex: Record<string, number> = {};\n\tlet prevOptionsIndex = 0;\n\tconst prevOptionsLength = prevOptions.length;\n\n\tfor (const optionOrGroup of loadedOptions) {\n\t\tconst group = checkGroup(optionOrGroup)\n\t\t\t? optionOrGroup\n\t\t\t: ({\n\t\t\t\t\toptions: [optionOrGroup],\n\t\t\t\t} as unknown as Group);\n\n\t\tconst { label = \"\" } = group;\n\n\t\tlet groupIndex = mapLabelToIndex[label];\n\t\tif (typeof groupIndex !== \"number\") {\n\t\t\tfor (\n\t\t\t\t;\n\t\t\t\tprevOptionsIndex < prevOptionsLength &&\n\t\t\t\ttypeof mapLabelToIndex[label] !== \"number\";\n\t\t\t\t++prevOptionsIndex\n\t\t\t) {\n\t\t\t\tconst prevGroup = prevOptions[prevOptionsIndex];\n\n\t\t\t\tif (checkGroup(prevGroup)) {\n\t\t\t\t\tmapLabelToIndex[prevGroup.label || \"\"] = prevOptionsIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgroupIndex = mapLabelToIndex[label];\n\t\t}\n\n\t\tif (typeof groupIndex !== \"number\") {\n\t\t\tmapLabelToIndex[label] = res.length;\n\t\t\tres.push(group);\n\t\t} else {\n\t\t\tres[groupIndex] = {\n\t\t\t\t...res[groupIndex],\n\t\t\t\toptions: [...(res[groupIndex] as Group).options, ...group.options],\n\t\t\t};\n\t\t}\n\t}\n\n\treturn res;\n};\n"],"mappings":"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","names":["import_react_select","import_react","sleep","useIsMountedRef","useLatest","currentOptions","import_react","import_react","MenuList","composeRefs","defaultComponents","import_jsx_runtime","defaultComponents","Select"]}