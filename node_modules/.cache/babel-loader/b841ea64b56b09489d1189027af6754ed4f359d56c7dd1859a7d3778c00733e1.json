{"ast":null,"code":"var _jsxFileName = \"/Users/mac/FPT Education/React JS/React Project/weather/src/components/search.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { GEO_API_URL, geoApiOptions } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = ({\n  onSearchChange\n}) => {\n  _s();\n  const [search, setSearch] = useState(null);\n  const loadOptions = inputValue => {\n    return fetch(`${GEO_API_URL}?minPopulation=1000000&namePrefix=${inputValue}`, geoApiOptions).then(reponse => reponse.json()).then(respone => console.log(respone)).catch(err => console.error(err));\n  };\n  const handleOnChange = searchData => {\n    setSearch(searchData);\n    onSearchChange(searchData);\n  };\n  return /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n    placeholder: \"Search City\",\n    debounceTimeout: 600,\n    value: search,\n    onChange: handleOnChange,\n    loadOptions: loadOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"rZ+0pF47En10nDqJpRK7x4d9dB0=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","AsyncPaginate","GEO_API_URL","geoApiOptions","jsxDEV","_jsxDEV","Search","onSearchChange","_s","search","setSearch","loadOptions","inputValue","fetch","then","reponse","json","respone","console","log","catch","err","error","handleOnChange","searchData","placeholder","debounceTimeout","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/FPT Education/React JS/React Project/weather/src/components/search.js"],"sourcesContent":["import { useState } from \"react\";\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { GEO_API_URL, geoApiOptions } from \"../api\";\n\nconst Search = ({ onSearchChange }) => {\n\n    const [search, setSearch] = useState(null);\n\n    const loadOptions = (inputValue) => {\n\n        return fetch(`${GEO_API_URL}?minPopulation=1000000&namePrefix=${inputValue}`,\n        geoApiOptions)\n            .then(reponse => reponse.json())\n            .then(respone => console.log(respone))\n            .catch(err => console.error(err));\n    }\n\n    const handleOnChange = (searchData) => {\n        setSearch(searchData);\n        onSearchChange(searchData);\n    }\n\n    return (\n        <AsyncPaginate\n            placeholder=\"Search City\"\n            debounceTimeout={600}\n            value={search}\n            onChange={handleOnChange}\n            loadOptions={loadOptions}\n        />\n\n\n\n    )\n}\n\nexport default Search;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,WAAW,EAAEC,aAAa,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAEnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMW,WAAW,GAAIC,UAAU,IAAK;IAEhC,OAAOC,KAAK,CAAE,GAAEX,WAAY,qCAAoCU,UAAW,EAAC,EAC5ET,aAAa,CAAC,CACTW,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC,CAC/BF,IAAI,CAACG,OAAO,IAAIC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC,CAAC,CACrCG,KAAK,CAACC,GAAG,IAAIH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC,CAAC;EACzC,CAAC;EAED,MAAME,cAAc,GAAIC,UAAU,IAAK;IACnCd,SAAS,CAACc,UAAU,CAAC;IACrBjB,cAAc,CAACiB,UAAU,CAAC;EAC9B,CAAC;EAED,oBACInB,OAAA,CAACJ,aAAa;IACVwB,WAAW,EAAC,aAAa;IACzBC,eAAe,EAAE,GAAI;IACrBC,KAAK,EAAElB,MAAO;IACdmB,QAAQ,EAAEL,cAAe;IACzBZ,WAAW,EAAEA;EAAY;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAKV,CAAC;AAAAxB,EAAA,CA9BKF,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AAgCZ,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}