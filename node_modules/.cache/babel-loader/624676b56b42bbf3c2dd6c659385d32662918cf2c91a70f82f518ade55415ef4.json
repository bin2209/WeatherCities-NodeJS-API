{"ast":null,"code":"var _jsxFileName = \"/Users/mac/FPT Education/React JS/React Project/weather/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport Search from './components/search';\nimport CurrentWeather from './components/current-weather/current-weather';\nimport { WEATHER_API_URL, WEATHER_API_KEY } from './api';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentWeatherFetch, setCurrentWeather] = useState(null);\n  const [forecastFetch, setForecast] = useState(null);\n  const handleOnSearchChange = searchData => {\n    const [lat, lon] = searchData.value.split(\" \");\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`);\n    const forecastFetch = fetch(`${WEATHER_API_URL}weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`);\n    Promise.all([currentWeatherFetch, forecastFetch]).then(async response => {\n      const weatherResponse = await response[0].json();\n      const forecastResponse = await response[1].json();\n      setCurrentWeather({\n        city: searchData.label,\n        weatherResponse\n      });\n      setForecast({\n        forecastResponse\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearchChange: handleOnSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YaD8mDzBx+IhbySdEHN/drZcs7E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Search","CurrentWeather","WEATHER_API_URL","WEATHER_API_KEY","useState","jsxDEV","_jsxDEV","App","_s","currentWeatherFetch","setCurrentWeather","forecastFetch","setForecast","handleOnSearchChange","searchData","lat","lon","value","split","fetch","Promise","all","then","response","weatherResponse","json","forecastResponse","city","label","className","children","onSearchChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/FPT Education/React JS/React Project/weather/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Search from './components/search';\nimport CurrentWeather from './components/current-weather/current-weather';\nimport {WEATHER_API_URL, WEATHER_API_KEY} from './api';\nimport { useState } from 'react';\n\n\nfunction App() {\n\n  const [currentWeatherFetch, setCurrentWeather] = useState(null);\n  const [forecastFetch, setForecast] = useState(null);\n\n\n  const handleOnSearchChange = (searchData) =>{\n    const [lat,lon] = searchData.value.split(\" \");\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`)\n    const forecastFetch = fetch(`${WEATHER_API_URL}weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`)\n  \n\n    Promise.all([currentWeatherFetch, forecastFetch])\n    .then(async(response) =>{\n      const weatherResponse = await response[0].json();\n      const forecastResponse = await response[1].json();\n      setCurrentWeather({city: searchData.label, weatherResponse});\n      setForecast({forecastResponse});\n\n    })\n  }\n  return (\n    <div className=\"container\">\n\n      <Search onSearchChange={handleOnSearchChange}/>\n      <CurrentWeather/>\n   \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,cAAc,MAAM,8CAA8C;AACzE,SAAQC,eAAe,EAAEC,eAAe,QAAO,OAAO;AACtD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,mBAAmB,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC/D,MAAM,CAACO,aAAa,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAGnD,MAAMS,oBAAoB,GAAIC,UAAU,IAAI;IAC1C,MAAM,CAACC,GAAG,EAACC,GAAG,CAAC,GAAGF,UAAU,CAACG,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;IAC7C,MAAMT,mBAAmB,GAAGU,KAAK,CAAE,GAAEjB,eAAgB,eAAca,GAAI,QAAOC,GAAI,UAASb,eAAgB,EAAC,CAAC;IAC7G,MAAMQ,aAAa,GAAGQ,KAAK,CAAE,GAAEjB,eAAgB,eAAca,GAAI,QAAOC,GAAI,UAASb,eAAgB,EAAC,CAAC;IAGvGiB,OAAO,CAACC,GAAG,CAAC,CAACZ,mBAAmB,EAAEE,aAAa,CAAC,CAAC,CAChDW,IAAI,CAAC,MAAMC,QAAQ,IAAI;MACtB,MAAMC,eAAe,GAAG,MAAMD,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MAChD,MAAMC,gBAAgB,GAAG,MAAMH,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MACjDf,iBAAiB,CAAC;QAACiB,IAAI,EAAEb,UAAU,CAACc,KAAK;QAAEJ;MAAe,CAAC,CAAC;MAC5DZ,WAAW,CAAC;QAACc;MAAgB,CAAC,CAAC;IAEjC,CAAC,CAAC;EACJ,CAAC;EACD,oBACEpB,OAAA;IAAKuB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAExBxB,OAAA,CAACN,MAAM;MAAC+B,cAAc,EAAElB;IAAqB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC/C7B,OAAA,CAACL,cAAc;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEd,CAAC;AAEV;AAAC3B,EAAA,CA7BQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}